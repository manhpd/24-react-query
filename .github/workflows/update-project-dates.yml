name: Auto Set Start Date on Branch Create

on:
  create:
    branches:
      - '*'
permissions:
  issues: write
  contents: read
  repository-projects: write

jobs:
  set_start_date:
    runs-on: ubuntu-latest

    steps:
      - name: Debug show all user projects
        env:
            GH_TOKEN: ${{ secrets.PROJECT_GH_KEY }}
        run: |
             gh api graphql -f query='
              query{
                user(login: "manhpd") {
                  projectsV2(first: 20) {
                    nodes {
                      id
                      title
                    }
                  }
                }
              }'
      - name: Set Start Date field in ProjectV2
        env:
          GH_TOKEN: ${{ secrets.PROJECT_GH_KEY }}
          REPO: ${{ github.repository }}
          BRANCH: ${{ github.ref_name }}
        run: |
          ISSUE_NUMBER=$(echo "$BRANCH" | grep -oE '[0-9]+' | head -n 1)
          echo "Issue Number: $ISSUE_NUMBER"
         
          ISSUE_NODE_ID=$(gh api graphql -f query='
            query($owner:String!, $repo:String!, $number:Int!) {
              repository(owner:$owner, name:$repo) {
                issue(number:$number) {
                  id
                }
              }
            }' -f owner="${REPO%/*}" -f repo="${REPO#*/}" -F number=$ISSUE_NUMBER --jq '.data.repository.issue.id')
          echo "Issue Node ID: $ISSUE_NODE_ID"
          
          USER="manhpd"
          PROJECT_ID=$(gh api graphql -f query='
            query($user:String!) {
              user(login:$user) {
                projectsV2(first: 10) {
                  nodes {
                    id
                    title
                    url
                  }
                }
              }
            }' -f user="$USER" --jq '.data.user.projectsV2.nodes[] | select(.title=="test project") | .id')
          echo "Project ID: $PROJECT_ID"
          
          ITEM_ID=$(gh api graphql -f query='
            query($project:ID!) {
              node(id:$project) {
                ... on ProjectV2 {
                  items(first: 100) {
                    nodes {
                      id
                      content {
                        ... on Issue {
                          id
                          number
                        }
                      }
                    }
                  }
                }
              }
            }' -F project=$PROJECT_ID -F issue=$ISSUE_NODE_ID --jq ".data.node.items.nodes[] | select(.content.id==\"$ISSUE_NODE_ID\") | .id")
          echo "Item ID: $ITEM_ID"
          FIELD_ID=$(gh api graphql -f query='
            query($project:ID!) {
              node(id:$project) {
                ... on ProjectV2 {
                  fields(first:50) {
                    nodes {
                      ... on ProjectV2FieldCommon {
                        id
                        name
                      }
                      ... on ProjectV2IterationField {
                        id
                        name
                      }
                      ... on ProjectV2SingleSelectField {
                        id
                        name
                      }
                    }
                  }
                }
              }
            }' -F project=$PROJECT_ID --jq '.data.node.fields.nodes[] | select(.name=="Start Date") | .id')
          
          echo "Field ID (Start Date): $FIELD_ID"
          
          DATE=$(date -u +'%Y-%m-%d')
          echo "Will set date: $DATE"
          
          gh api graphql -f query='
            mutation($project:ID!, $item:ID!, $field:ID!, $date:Date!) {
              updateProjectV2ItemFieldValue(
                input: {
                  projectId: $project
                  itemId: $item
                  fieldId: $field
                  value: { date: $date }
                }
              ) {
                projectV2Item {
                  id
                }
              }
            }' \
            -f project="$PROJECT_ID" \
            -f item="$ITEM_ID" \
            -f field="$FIELD_ID" \
            -f date="$DATE"
          echo "âœ… Start Date updated to $DATE"
